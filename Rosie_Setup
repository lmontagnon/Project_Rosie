			Using Rosie first time

Notion link : https://indrorobotics.notion.site/Getting-Started-with-ROSIE-8931d3b2658f4931a9fb4a5f667e77e5

Tip : 
	To add root on docker: xhost si:localuser:root
			
Inside a docker:

sudo apt update
sudo apt upgrade
sudo apt install net-tools
sudo apt install nano
sudo apt install unzip


Setup cyclonedds with ZeroUI (Zerotier):
	sudo apt install ros-humble-rmw-cyclonedds-cpp
	" curl -s 'https://raw.githubusercontent.com/zerotier/ZeroTierOne/master/doc/contact%40zerotier.com.gpg' | gpg --import && \
	if z=$(curl -s 'https://install.zerotier.com/' | gpg); then echo "$z" | sudo bash; fi "
	or curl https://install.zerotier.com/ | bash
	#if you have some issue with your publique key : sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 1657198823E52A61
	start zerotier : sudo usr/sbin/zerotier-one -U -d
	join zerotier : sudo usr/sbin/zerotier-cli join 3850b435d466e917
	info : sudo zerotier-cli info
	if you don't have "ifconfig" command : sudo apt install net-tools or sudo zerotier-cli listnetworks
	
	Creating cyclonedds.xml file:
		cd /
		sudo nano cyclonedds.xml (if you can't save : see tip "add root")
		"<?xml version="1.0" encoding="utf-8"?>
		 <CycloneDDS
		  xmlns="https://cdds.io/config"
		  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		  xsi:schemaLocation="https://cdds.io/config https://raw.githubusercontent.com/eclipse-cyclonedds/cyclonedds/master/etc/cyclonedds.xsd">
		  <Domain Id="any">
		    <General>
		      <Interfaces>
			<NetworkInterface name="<Zerotier, ethernet or wifi ID> " priority="default"
			multicast="default" />
		      </Interfaces>
		      <AllowMulticast>default</AllowMulticast>
		      <MaxMessageSize>65500B</MaxMessageSize>
		      <Transport>udp</Transport>
		    </General>
		    <Tracing>
			<Verbosity>config</Verbosity>
			    <OutputFile>stdout</OutputFile>
		    </Tracing>
		  </Domain>
		</CycloneDDS>"
		ctrl+s
		If you use zerotier please add your zerotier ID "zt..." or by ethernet "enp..." or by Rosie wifi "wlp...", you can found the ID with this command : ifconfig 
		
	Setting up Cyclonedds as default RMW:
		sudo nano ~/.bashrc (if you can't write use "vim" inplace of "nano" or install it)
		write this at the end of the page:
			export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
			export CYCLONEDDS_URI=file:///cyclonedds.xml
		
		Creating Alias, This is useful when you have joined the networks of multiple robots. This will individualize your connections. Add the following lines to your ~/.bashrc file:
		#export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp we don't need these two lines with alias of your robot
		#export CYCLONEDDS_URI=file:///cyclonedds.xml
		alias rosie_eth='ros2 daemon stop &&  export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp && export CYCLONEDDS_URI=file:///rosieEth_cyclonedds.xml && echo connecting to rosie'
		alias rosie_wifi='ros2 daemon stop &&  export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp && export CYCLONEDDS_URI=file:///rosieWifi_cyclonedds.xml && echo connecting to rosie'
		#Tip : Add other aliases with the names of the other robots to connect to more robots. Change the CYCLONEDDS_URI file to the cyclonedds.xml file containing the appropriate interface. It may be worth renaming the cyclonedds.xml file to be tagged with the robot using the included interface. e.g. scout_1_cyclonedds.xml
		To reset the ros2 daemon in order to disconnect to one robot, or reconnect to another, use the following command: ros2 daemon stop
		
		Ctrl+s, ctrl+x
		And Source ! : source ~/.bashrc
		

		
	###Increasing buffer size on robot by ssh:
		sudo nano /etc/sysctl.d/10-cyclone-max.conf
		if not add : net.core.rmem_max=21474836
		sudo reboot###



Create environnement to help move Rosie with nav2 stack and control arms with moveit2:
	mkdir -p ~/colcon_ws/src
	#Download the rosie-main on indro link, unzip it and move it into colcon_ws/src :
	cd ~/Downloads
	unzip rosie-main.zip -d ~/colcon_ws/src/
	Please make sure to rename it to rosie. To do that you can use :
	cd ~/colcon_ws/src
	mv rosie-main rosie
	git clone https://github.com/Kinovarobotics/ros2_kortex.git
	cd ~/colcon_ws
	sudo apt install python3-colcon-common-extensions python3-vcstool
	rosdep install --ignore-src --from-paths src -y -r --rosdistro humble
	#Install ZED2 package:
		on your workspace src folder: 
		git clone --recursive https://github.com/stereolabs/zed-ros2-wrapper.git
		cd ..
		sudo apt update
		# Install the required dependencies:
		rosdep install --from-paths src --ignore-src -r -y
		# Build the wrapper:
		colcon build --symlink-install --cmake-args=-DCMAKE_BUILD_TYPE=Release
		# Setup the environment variables:
		echo source $(pwd)/install/local_setup.bash >> ~/.bashrc
		source ~/.bashrc
